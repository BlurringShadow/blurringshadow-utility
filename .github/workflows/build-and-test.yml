name: Build-and-Test

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [develop]

jobs:
  linux-job:
    name: Ubuntu
    runs-on: ${{ matrix.os }}
    continue-on-error: false

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04]
        include:
          - os: ubuntu-22.04
            llvm-ver: 15

    steps:
      - uses: actions/checkout@v2

      - name: Fetch Clang
        uses: ./.github/actions/apt-fetch-clang
        with:
          llvm-ver: ${{ matrix.llvm-ver }}

      - name: Get cmake option
        id: cmake-option
        run: echo "cmake-options=-DVCPKG_TARGET_TRIPLET=x64-linux-clang -DVCPKG_HOST_TRIPLET=x64-linux-clang -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=\"${{ github.workspace }}/.vcpkg/scripts/toolchains/linux-clang.cmake\"" >> $GITHUB_OUTPUT

      - name: CMake build and test (Debug)
        uses: ./.github/actions/cmake-build-and-test
        with:
          config-option: ${{ steps.cmake-option.outputs.cmake-options }} -DENABLE_CODE_COVERAGE=true -DENABLE_CLANG_TIDY=true
          before-build: \cp -rf ./cmake/vcpkg/* ./.vcpkg/
          build-dir: .build/Debug

      - name: CMake build and test (Release)
        uses: ./.github/actions/cmake-build-and-test
        with:
          build-type: Release
          config-option: ${{ steps.cmake-option.outputs.cmake-options }}
          build-dir: .build/Release

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: .build/Debug/tests/stdsharpTestsCoverage.lcov

      - name: Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
          run-docker-tools: false
          clang-tidy-output: ".build/Debug/cmake-build.log"

  windows-job:
    name: Windows
    runs-on: ${{ matrix.os }}
    continue-on-error: false

    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Update MSVC
        uses: ./.github/actions/update-msvc
        with:
          llvm-ver: ${{ matrix.llvm-ver }}

      - name: CMake build and test (Debug)
        uses: ./.github/actions/cmake-build-and-test
        with:
          build-dir: .build/Debug

      - name: CMake build and test (Release)
        uses: ./.github/actions/cmake-build-and-test
        with:
          build-type: Release
          build-dir: .build/Release
