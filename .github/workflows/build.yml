name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:          
    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            cmakeOptions: ''
            Target: blurringshadowTests
          - os: ubuntu-latest
            triplet: x64-linux
            cmakeOptions: -DCMAKE_CXX_COMPILER=gcc-10
            Target: blurringshadowTests
          - os: macos-latest
            triplet: x64-osx
            cmakeOptions: -DCMAKE_CXX_COMPILER=gcc-10
            Target: blurringshadowTests
    env:
      Target: blurringshadowTests
      buildDir: '${{ github.workspace }}/out'
      
    steps:
      - uses: actions/checkout@v2

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          setupOnly: true
          vcpkgGitCommitId: 'b2544fd780b2e9a05d903314cbbd37268ba43d81'
          # Ensure the cache key changes any time the content of the manifest file changes.
          appendedCacheKey: ${{ hashFiles( 'vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
       
      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          buildDirectory: '${{ env.buildDir }}'
          useVcpkgToolchainFile: true
          vcpkgTriplet: ${{ matrix.triplet }}
          cmakeAppendedArgs : ${{ matrix.cmakeOptions }}

      - name: Build Project
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          vcpkgTriplet: ${{ matrix.triplet }}
          buildDirectory: '${{ env.buildDir }}'
          cmakeAppendedArgs : --build ${{ env.buildDir }} -t ${{ env.Target }} 
          
      - name: Initialize CodeQL
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: github/codeql-action/init@v1
        with:
          languages: 'cpp'

      - name: Perform CodeQL Analysis
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: github/codeql-action/analyze@v1
