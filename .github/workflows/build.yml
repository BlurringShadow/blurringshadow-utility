name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}
    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build/
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_ID: '30b217b1ede50f6c27b7234388114f4b0d60a3f7'
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: windows-latest
            cmakeOptions: ''
          - os: ubuntu-latest
            cmakeOptions: -DCMAKE_CXX_COMPILER=clang++-12
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts.
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CMAKE_BUILD_DIR }}/vcpkg_installed/
          key: |
            ${{ env.VCPKG_ID }}-${{ hashFiles( 'vcpkg.json' ) }}

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_ID }}
          appendedCacheKey: ${{ env.VCPKG_ID }}

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies and generate project files
        run: |
          cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" ${{ matrix.cmakeOptions }}

      - name: Build
        run: |
          cmake --build "${{ env.CMAKE_BUILD_DIR }}"

      - name: Run test
        run: |
          cd build
          set CTEST_OUTPUT_ON_FAILURE=1
          ctest -C Debug
