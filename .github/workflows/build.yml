name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}
    env:
      buildDir: '${{ github.workspace }}/build'
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows
            cmakeOptions: ''
          - os: ubuntu-latest
            triplet: x64-linux
            cmakeOptions: -DCMAKE_CXX_COMPILER=clang++-12
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          setupOnly: true
          vcpkgGitCommitId: '69d5556d0d8c105f75055326cef346546e40e615'
          # Ensure the cache key changes any time the content of the manifest file changes.
          appendedCacheKey: ${{ hashFiles('vcpkg.json') }}
          vcpkgTriplet: ${{ matrix.triplet }}

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          buildDirectory: '${{ env.buildDir }}'
          useVcpkgToolchainFile: true
          vcpkgTriplet: ${{ matrix.triplet }}
          cmakeAppendedArgs: ${{ matrix.cmakeOptions }}

      - name: Run test
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: |
          cd build
          ctest -C Debug
